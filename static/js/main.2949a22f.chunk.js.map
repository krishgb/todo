{"version":3,"sources":["Todo/Form.js","Todo/ListTasks.js","Todo/SearchList.js","Todo/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","formHandler","type","placeholder","ListTasks","tasks","searchedTask","changeDone","deleteHandler","listTask","list","map","li","id","Date","date","toDateString","split","splice","join","value","task","readOnly","className","completed","onClick","length","SearchList","showAll","clearHandler","radioHandler","changeTaskInput","onChange","name","Main","setState","setLocalStorage","state","localStorage","setItem","JSON","stringify","event","parseInt","target","parentElement","filter","preventDefault","newTask","children","trim","now","push","parse","eveValue","includes","getItem","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2949a22f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Form(props) {\r\n    return (\r\n        <form onSubmit={props.formHandler}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Add a task....\"\r\n            />\r\n            <button>+</button>\r\n        </form>\r\n\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ListTasks(props) {\r\n\r\n    const { tasks,\r\n        searchedTask,\r\n        changeDone,\r\n        deleteHandler\r\n    } = props\r\n\r\n    const listTask = (list) => list.map(li =>\r\n        <li key={li.id} id={li.id}>\r\n            <sub>{new Date(li.date).toDateString().split(' ').splice(1, 2).join(' ')}</sub>\r\n            <input\r\n                value={li.task}\r\n                readOnly\r\n                className={li.completed ? 'strike' : ''}\r\n            />\r\n            <button\r\n                id=\"done\"\r\n                onClick={changeDone}\r\n            >{li.completed ? 'Repeat' : 'Done'}</button>\r\n            <button\r\n                id=\"delete\"\r\n                onClick={deleteHandler}\r\n            >Delete</button>\r\n        </li>\r\n    )\r\n    return (\r\n        <ul>\r\n            {searchedTask.length ? listTask(searchedTask) : listTask(tasks)}\r\n\r\n        </ul>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function SearchList(props) {\r\n    const { showAll, clearHandler, radioHandler, changeTaskInput } = props\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                <input\r\n                    onChange={changeTaskInput}\r\n                    type=\"text\"\r\n                    placeholder=\"Search your tasks\"\r\n                />\r\n                <button onClick={showAll}>All</button>\r\n\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"show\"\r\n                        value=\"true\"\r\n                        onClick={radioHandler}\r\n                    />Finished\r\n                </label>\r\n\r\n                <label>\r\n\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"show\"\r\n                        value=\"false\"\r\n                        onClick={radioHandler}\r\n                    />Ongoing\r\n                </label>\r\n            </div>\r\n\r\n            <button onClick={clearHandler}>Clear All</button>\r\n\r\n        </>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport Form from './Form'\r\nimport ListTasks from './ListTasks'\r\nimport SearchList from './SearchList'\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            tasks: [\r\n            ],\r\n            searchedTask: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tasks = JSON.parse(localStorage.getItem('tasks'))\r\n        this.setState({\r\n            tasks: tasks ? tasks : [\r\n                {\r\n                    id: 0,\r\n                    task: 'Be nice',\r\n                    date: new Date().toDateString().split(' ').splice(1, 2).join(' '),\r\n                    completed: false\r\n                }\r\n\r\n            ]\r\n        })\r\n    }\r\n\r\n    showAll = () => this.setState({ searchedTask: [] })\r\n\r\n    clearHandler = () => this.setLocalStorage([], [])\r\n\r\n    setLocalStorage = (tasks, searchedTask = this.state.searchedTask) => this.setState({ tasks, searchedTask }, () => localStorage.setItem('tasks', JSON.stringify(tasks)))\r\n\r\n    changeDone = (event) => {\r\n        const id = parseInt(event.target.parentElement.id)\r\n        const tasks = this.state.tasks.map(task => {\r\n            task.id === id && (task.completed = !task.completed)\r\n            return task\r\n        })\r\n\r\n        this.setLocalStorage(tasks)\r\n    }\r\n\r\n    deleteHandler = event => {\r\n        const id = parseInt(event.target.parentElement.id)\r\n        const tasks = this.state.tasks.filter(task => task.id !== id)\r\n\r\n        this.setLocalStorage(tasks)\r\n    }\r\n\r\n\r\n    formHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        const newTask = event.target.children[0].value.trim()\r\n\r\n        const task = newTask && {\r\n            id: Date.now(),\r\n            task: newTask,\r\n            date: new Date().toDateString().split(' ').splice(1, 2).join(' '),\r\n            completed: false\r\n        }\r\n\r\n        const tasks = [...this.state.tasks]\r\n        tasks.push(task)\r\n        this.setLocalStorage(tasks)\r\n\r\n        event.target.children[0].value = ''\r\n    }\r\n\r\n    radioHandler = event => {\r\n        const searchedTask = [...this.state.tasks].filter(task => task.completed === JSON.parse(event.target.value))\r\n        this.setState({ searchedTask })\r\n    }\r\n\r\n    changeTaskInput = (event) => {\r\n        const eveValue = event.target.value.trim()\r\n        const searchedTask = [...this.state.tasks].filter(task => task.task.includes(eveValue.length ? eveValue : ''))\r\n        this.setState({ searchedTask })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <main>\r\n\r\n                    <Form formHandler={this.formHandler} />\r\n\r\n                    <SearchList\r\n                        changeTaskInput={this.changeTaskInput}\r\n                        showAll={this.showAll}\r\n                        clearHandler={this.clearHandler}\r\n                        radioHandler={this.radioHandler}\r\n                    />\r\n                </main>\r\n\r\n                <ListTasks\r\n                    tasks={this.state.tasks}\r\n                    changeDone={this.changeDone}\r\n                    deleteHandler={this.deleteHandler}\r\n                    searchedTask={this.state.searchedTask}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}","import './App.css';\nimport React from 'react'\nimport Main from './Todo/Main';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <h1>Deku's ToDo</h1>\n      <Main />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}